{
  "swagger": "2.0",
  "info": {
    "title": "services.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/apps": {
      "get": {
        "summary": "Account api",
        "operationId": "AppList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerAppListResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "AppCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsApp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllerAppRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/apps/{name}": {
      "get": {
        "operationId": "AppGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsApp"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "AppDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/apps/{name}/restart": {
      "get": {
        "operationId": "AppRestart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/auth": {
      "post": {
        "operationId": "Auth",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerAuthResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllerAuthRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds": {
      "post": {
        "summary": "Build Api",
        "operationId": "BuildCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsBuild"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{id}": {
      "get": {
        "operationId": "BuildGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsBuild"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "BuildDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{id}/logs": {
      "get": {
        "operationId": "BuildLogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerBuildLogResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{id}/logs/stream": {
      "get": {
        "operationId": "BuildLogsStream",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/controllerLogStreamResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{name}": {
      "get": {
        "operationId": "BuildList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerBuildListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/env/{name}": {
      "get": {
        "operationId": "EnvironmentGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsEnvConfig"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "EnvironmentSet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/kubectl": {
      "get": {
        "summary": "kubectl api wrappers",
        "operationId": "Kubectl",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerCmdResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/logs/{name}": {
      "get": {
        "operationId": "LogStream",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/controllerLogStreamResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/process/{name}/run": {
      "get": {
        "summary": "Process api",
        "operationId": "ProcessRun",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerCmdResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases": {
      "post": {
        "operationId": "BuildRelease",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsRelease"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases/{app}/{id}": {
      "delete": {
        "operationId": "ReleaseDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases/{name}": {
      "get": {
        "summary": "Release endpoints",
        "operationId": "ReleaseList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerReleaseListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources": {
      "get": {
        "summary": "Resource endpoints",
        "operationId": "ResourceList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerResourceListResponse"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ResourceCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}": {
      "get": {
        "operationId": "ResourceGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ResourceDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}/link/{app}": {
      "put": {
        "operationId": "ResourceLink",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}/unlink/{app}": {
      "put": {
        "operationId": "ResourceUnlink",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    }
  },
  "definitions": {
    "controllerAppIdRequest": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "id": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerAppListResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsApp"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerAppRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerAppResourceReq": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerAuthRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerAuthResponse": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "project": {
          "type": "string",
          "format": "string"
        },
        "region": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerBuildListResponse": {
      "type": "object",
      "properties": {
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsBuild"
          }
        }
      }
    },
    "controllerBuildLogRequest": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "id": {
          "type": "string",
          "format": "string"
        },
        "pos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerBuildLogResponse": {
      "type": "object",
      "properties": {
        "lines": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "pos": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerBuildLogStreamReq": {
      "type": "object",
      "properties": {
        "follow": {
          "type": "boolean",
          "format": "boolean"
        },
        "id": {
          "type": "string",
          "format": "string"
        },
        "since": {
          "$ref": "#/definitions/protobufDuration"
        }
      }
    },
    "controllerCmdResponse": {
      "type": "object",
      "properties": {
        "err": {
          "type": "string",
          "format": "string"
        },
        "exit_code": {
          "type": "integer",
          "format": "int32"
        },
        "stdErr": {
          "type": "string",
          "format": "string"
        },
        "stdOut": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerCreateBuildRequest": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerCreateResourceRequest": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "controllerEnvSetRequest": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerKubectlReq": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "controllerListRequest": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerLogStreamReq": {
      "type": "object",
      "properties": {
        "follow": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "since": {
          "$ref": "#/definitions/protobufDuration"
        }
      }
    },
    "controllerLogStreamResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "controllerProcessRunReq": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "controllerReleaseListResponse": {
      "type": "object",
      "properties": {
        "releases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsRelease"
          }
        }
      }
    },
    "controllerResourceListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsResource"
          }
        }
      }
    },
    "modelsApp": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "release_id": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "modelsBuild": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "string"
        },
        "remote_id": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "modelsEnvConfig": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "modelsRelease": {
      "type": "object",
      "properties": {
        "app": {
          "type": "string",
          "format": "string"
        },
        "build_id": {
          "type": "string",
          "format": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "modelsResource": {
      "type": "object",
      "properties": {
        "URL": {
          "type": "string",
          "format": "string"
        },
        "apps": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "string"
          }
        },
        "exports": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        },
        "kind": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        },
        "stack": {
          "type": "string",
          "format": "string"
        },
        "status": {
          "type": "string",
          "format": "string"
        },
        "status_reason": {
          "type": "string",
          "format": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "string"
          }
        }
      }
    },
    "protobufDuration": {
      "type": "object",
      "properties": {
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Signed fractions of a second at nanosecond resolution of the span\nof time. Durations less than one second are represented with a 0\n`seconds` field and a positive or negative `nanos` field. For durations\nof one second or more, a non-zero value for the `nanos` field must be\nof the same sign as the `seconds` field. Must be from -999,999,999\nto +999,999,999 inclusive."
        },
        "seconds": {
          "type": "string",
          "format": "int64",
          "title": "Signed seconds of the span of time. Must be from -315,576,000,000\nto +315,576,000,000 inclusive. Note: these bounds are computed from:\n60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
        }
      },
      "description": "A Duration represents a signed, fixed-length span of time represented\nas a count of seconds and fractions of seconds at nanosecond\nresolution. It is independent of any calendar and concepts like \"day\"\nor \"month\". It is related to Timestamp in that the difference between\ntwo Timestamp values is a Duration and it can be added or subtracted\nfrom a Timestamp. Range is approximately +-10,000 years.\n\n# Examples\n\nExample 1: Compute Duration from two Timestamps in pseudo code.\n\n    Timestamp start = ...;\n    Timestamp end = ...;\n    Duration duration = ...;\n\n    duration.seconds = end.seconds - start.seconds;\n    duration.nanos = end.nanos - start.nanos;\n\n    if (duration.seconds \u003c 0 \u0026\u0026 duration.nanos \u003e 0) {\n      duration.seconds += 1;\n      duration.nanos -= 1000000000;\n    } else if (durations.seconds \u003e 0 \u0026\u0026 duration.nanos \u003c 0) {\n      duration.seconds -= 1;\n      duration.nanos += 1000000000;\n    }\n\nExample 2: Compute Timestamp from Timestamp + Duration in pseudo code.\n\n    Timestamp start = ...;\n    Duration duration = ...;\n    Timestamp end = ...;\n\n    end.seconds = start.seconds + duration.seconds;\n    end.nanos = start.nanos + duration.nanos;\n\n    if (end.nanos \u003c 0) {\n      end.seconds -= 1;\n      end.nanos += 1000000000;\n    } else if (end.nanos \u003e= 1000000000) {\n      end.seconds += 1;\n      end.nanos -= 1000000000;\n    }\n\nExample 3: Compute Duration from datetime.timedelta in Python.\n\n    td = datetime.timedelta(days=3, minutes=10)\n    duration = Duration()\n    duration.FromTimedelta(td)\n\n# JSON Mapping\n\nIn JSON format, the Duration type is encoded as a string rather than an\nobject, where the string ends in the suffix \"s\" (indicating seconds) and\nis preceded by the number of seconds, with nanoseconds expressed as\nfractional seconds. For example, 3 seconds with 0 nanoseconds should be\nencoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should\nbe expressed in JSON format as \"3.000000001s\", and 3 seconds and 1\nmicrosecond should be expressed in JSON format as \"3.000001s\"."
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
