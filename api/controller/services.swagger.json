{
  "swagger": "2.0",
  "info": {
    "title": "services.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/apps": {
      "get": {
        "summary": "Account api",
        "operationId": "AppList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerAppListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "AppCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsApp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllerAppRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/apps/{name}": {
      "get": {
        "operationId": "AppGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsApp"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "AppDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/apps/{name}/restart": {
      "get": {
        "operationId": "AppRestart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/auth": {
      "post": {
        "operationId": "Auth",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerAuthResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/controllerAuthRequest"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds": {
      "post": {
        "summary": "Build Api",
        "operationId": "BuildCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsBuild"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/import": {
      "post": {
        "operationId": "BuildImport",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{id}": {
      "get": {
        "operationId": "BuildGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsBuild"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "app",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "BuildDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{id}/logs": {
      "get": {
        "operationId": "BuildLogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerBuildLogResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "app",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pos",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/builds/{name}": {
      "get": {
        "operationId": "BuildList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerBuildListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/env/{name}": {
      "get": {
        "operationId": "EnvironmentGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsEnvConfig"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "EnvironmentSet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/kubectl": {
      "get": {
        "summary": "kubectl api wrappers",
        "operationId": "Kubectl",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerCmdResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "args",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/logs/{name}": {
      "get": {
        "summary": "Logs API",
        "operationId": "LogStream",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/controllerStreamMsg"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "follow",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "since.seconds",
            "description": "Signed seconds of the span of time. Must be from -315,576,000,000\nto +315,576,000,000 inclusive.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "since.nanos",
            "description": "Signed fractions of a second at nanosecond resolution of the span\nof time. Durations less than one second are represented with a 0\n`seconds` field and a positive or negative `nanos` field. For durations\nof one second or more, a non-zero value for the `nanos` field must be\nof the same sign as the `seconds` field. Must be from -999,999,999\nto +999,999,999 inclusive.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "proctype",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/process/formation": {
      "get": {
        "operationId": "ProcessSave",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "app",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/process/list": {
      "get": {
        "operationId": "ProcessList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerProcessListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/process/run": {
      "get": {
        "summary": "Process api",
        "operationId": "ProcessRun",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/controllerStreamMsg"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases": {
      "post": {
        "operationId": "BuildRelease",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsRelease"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases/{app}/{id}": {
      "delete": {
        "operationId": "ReleaseDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/releases/{name}": {
      "get": {
        "summary": "Release endpoints",
        "operationId": "ReleaseList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerReleaseListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources": {
      "get": {
        "summary": "Resource endpoints",
        "operationId": "ResourceList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/controllerResourceListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "post": {
        "operationId": "ResourceCreate",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}": {
      "get": {
        "operationId": "ResourceGet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo_url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      },
      "delete": {
        "operationId": "ResourceDelete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}/link/{app}": {
      "put": {
        "operationId": "ResourceLink",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    },
    "/v1/resources/{name}/unlink/{app}": {
      "put": {
        "operationId": "ResourceUnlink",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsResource"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "app",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProviderService"
        ]
      }
    }
  },
  "definitions": {
    "controllerAppListResponse": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsApp"
          }
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "controllerAppRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "repo_url": {
          "type": "string"
        }
      }
    },
    "controllerAuthRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "controllerAuthResponse": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "controllerBuildListResponse": {
      "type": "object",
      "properties": {
        "builds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsBuild"
          }
        }
      }
    },
    "controllerBuildLogResponse": {
      "type": "object",
      "properties": {
        "pos": {
          "type": "integer",
          "format": "int32"
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "controllerCmdResponse": {
      "type": "object",
      "properties": {
        "exit_code": {
          "type": "integer",
          "format": "int32"
        },
        "err": {
          "type": "string"
        },
        "stdOut": {
          "type": "string"
        },
        "stdErr": {
          "type": "string"
        }
      }
    },
    "controllerProcessListResponse": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsProcess"
          }
        }
      }
    },
    "controllerReleaseListResponse": {
      "type": "object",
      "properties": {
        "releases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsRelease"
          }
        }
      }
    },
    "controllerResourceListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsResource"
          }
        }
      }
    },
    "controllerStreamMsg": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "modelsApp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "release_id": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "build_id": {
          "type": "string"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "modelsBuild": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "app": {
          "type": "string"
        },
        "remote_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        },
        "procfile": {
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "modelsEnvConfig": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "modelsProcess": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "proctype": {
          "type": "string"
        },
        "workers": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "modelsRelease": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "app": {
          "type": "string"
        },
        "build_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "created_at": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "modelsResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_reason": {
          "type": "string"
        },
        "URL": {
          "type": "string"
        },
        "stack": {
          "type": "string"
        },
        "apps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exports": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
