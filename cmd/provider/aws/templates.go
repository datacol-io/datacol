// Code generated by go-bindata.
// sources:
// cmd/provider/aws/templates/formation.yaml
// DO NOT EDIT!

package aws

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdProviderAwsTemplatesFormationYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x7b\x73\x1b\x37\x92\xf8\xff\xfc\x14\x1d\x46\x1b\xc9\x59\x0f\x5f\x92\xbd\x32\x7f\xeb\xd4\x8f\xa6\x64\x9b\x27\x59\xe2\x8a\xb2\x52\xc9\x25\xe7\x02\x67\x9a\x24\x56\x43\x60\x02\x60\x24\x31\x3e\xdd\x67\xbf\xc2\x6b\x1e\x9c\xa1\x1e\x4e\x6c\xdf\x6d\x5d\x5c\x95\x12\x81\x46\xa3\x5f\x68\x34\x1a\xe8\x69\x04\x41\xd0\x18\xfc\x38\x39\xc7\x65\x12\x13\x85\xaf\xb9\x58\x12\x75\x81\x42\x52\xce\xfa\xb0\xdd\xeb\x74\x3b\x41\xe7\x45\xd0\x79\xb1\xdd\x38\x40\x19\x0a\x9a\x28\xdb\x73\x94\x4e\x51\x30\x54\x28\x61\xf0\xe3\x04\x86\x31\x4f\x23\x3b\x9a\x72\x06\x1e\x5f\x1f\x86\x02\x89\x42\x20\x90\x0f\x68\x00\x84\x71\x2a\x15\x0a\xa0\x0c\x08\x30\xbc\x86\x8b\xf1\xb0\x05\xe7\x0b\x84\x25\x31\x1d\x8c\x47\x08\x54\x02\x61\x40\x52\xc5\x03\x81\x21\xbf\x42\x41\xd9\x1c\x06\x4b\xf2\x3b\x67\x70\x38\xec\x35\x00\x28\x93\x8a\xb0\x10\x5b\xd0\x0d\x7a\x1d\x20\x51\x44\x35\x01\x24\xd6\xfd\x59\xaf\x34\x13\x31\x18\xa4\x8a\x4f\x42\x12\x53\x36\x7f\x23\x78\x9a\xc0\x3f\x39\x65\xa0\x16\xd8\x80\x02\x7d\x19\x75\x44\x1a\x3a\x64\x0b\x06\x0c\x0e\x8f\x5f\x41\x22\xf8\x15\x8d\x34\x04\x67\x33\x3a\x4f\x05\x99\xc6\x08\x78\xa3\x50\xe8\x29\x49\x18\xa2\xd4\xec\x29\xae\x91\x16\x51\x0e\xc6\x23\xcb\x9f\x63\x16\x28\x0b\xe3\x54\xa3\x22\x30\x25\xd2\x08\x6d\xc1\xa5\xd2\x43\xe7\x82\x30\xd5\x00\x98\x4c\xde\x3a\x94\x1e\x61\x22\xe8\x95\x96\xa6\x4c\xa7\x0c\x15\xcc\xb8\x30\xcd\x8e\x5e\x3d\x01\x95\xa0\x9c\xec\x21\x34\xa2\x37\xf4\x5c\x73\x90\x8a\x84\x97\xb2\x0f\x9c\x61\x36\xd0\x13\x43\x58\x54\x6a\x2f\x20\x44\x3b\x10\xa8\xc6\x23\x53\xaa\x0c\xcb\x1a\x30\xc2\x2b\x8c\x79\xb2\x44\xa6\x0c\x02\xb9\x24\x71\x0c\x92\xb2\x79\x8c\x81\x42\xb2\xf4\x68\x64\x0b\xbe\xff\xfe\xc7\xc1\xd9\xc9\xe8\xe4\xcd\xf7\xdf\x1b\x22\x35\x4d\x6b\x64\xc2\x8c\xa7\xa2\xa0\xdc\x82\xf2\xae\xa9\x5a\x40\x84\x33\x92\xc6\x0a\x24\x2a\x45\xd9\x5c\xb6\xe0\x27\x9e\xc2\x35\x8d\xe3\x06\xc0\x14\x61\x4a\xe3\x18\xa3\x8c\x05\x6d\x94\x02\x25\x4f\x85\xc6\x90\x4a\x8c\x80\xce\x60\xc5\x53\x37\x1f\x10\xc7\xd8\x4c\xf0\x25\xa8\xa2\xe0\x5a\xdb\x8d\xc6\xb7\x86\xf5\x77\xa8\x48\x44\x14\x01\x85\x71\x6c\x0d\x7d\xc1\xaf\xb5\x36\x22\x2a\x93\x98\xac\xac\x56\x88\x20\x4b\xd4\x8c\x42\x94\x1a\x13\xb5\x98\xcd\x44\x94\xb3\x86\x47\xd3\x6f\x80\xc6\xd1\xef\x97\x57\x4b\xbf\x3f\x62\x0a\xc5\x8c\x84\xa8\x21\x00\xc6\x1e\xa1\x31\x52\x69\x1b\x03\x38\x26\x53\x8c\xed\x0f\xfd\x9f\x13\x48\x1f\xce\xf0\xb7\x94\x0a\x8c\x5c\x4f\x36\x5a\x7a\xd8\x00\x7e\xe6\x0c\x3b\xa5\x5f\xdd\xec\xd7\x20\x5a\x52\x36\x62\x73\x81\x52\x1e\xf3\xd0\x92\xec\x3b\x8f\x70\x75\x42\x96\x78\x0f\x05\x83\xe8\x4a\x6b\xea\x2e\x0a\x4e\x50\x5d\x73\x71\x49\xd9\x7c\x6c\x17\x91\xc8\xe7\xd8\x97\x27\x3c\xc2\x21\x49\x48\x48\xd5\x2a\x6b\x1f\x39\x03\x38\x5f\x25\x98\x35\x1e\x50\x79\x39\xa1\xbf\xe3\x9b\x69\xd6\xf4\xca\xae\x9f\x5a\xf0\x7f\x4c\x26\xbb\xaf\xd2\xf0\x12\x55\xc6\x86\x6f\x3e\xc2\xd5\x58\xe0\x8c\xde\x34\xca\x42\x37\x4c\x66\x94\x3b\x01\xd4\x30\xad\x97\xe7\x11\x7a\x72\x8d\x84\xeb\x44\x73\x45\x68\x4c\xa6\x34\xa6\x6a\x65\x80\x0a\xf0\xdd\x3a\xac\x18\x72\x16\x6d\x1c\x56\xa7\xac\x5a\x85\x2c\x29\x03\x07\x07\x6b\x5a\x2d\x0a\xaa\x66\xac\xef\x86\x82\x20\x73\xa9\xd7\x0c\xd0\x9d\xa0\x7b\x61\xe7\x0d\x7d\xf5\xc4\x01\xd4\x68\xe5\xbe\xc9\x60\xc7\x0d\x82\xb7\x5c\x2a\x8f\x68\xcd\x3c\x6a\x90\xe8\x6e\x58\x33\x9f\xb2\xe2\xeb\x04\xbd\x0b\xb6\xbf\x30\x20\x33\x89\x7a\xf8\x23\x5c\x81\x33\x19\xdb\x59\x35\xea\x3a\xea\x32\x20\xc8\x4c\xdf\xf9\x97\x7c\xa1\x00\x89\x63\xed\x59\x16\xa8\x7d\x95\xd0\x2e\x26\x21\x52\x42\x98\x4a\xc5\x97\x99\xd3\xf3\x1b\x81\x75\x30\x53\x9c\x71\x81\xb9\x9f\x29\xaf\xbb\x92\xe5\x96\x36\xef\xc3\x1b\x2a\x35\x3a\xe3\x66\x35\xcf\x84\x0a\xe3\x38\xf3\x1d\xa7\x65\x46\x19\xa5\x59\x97\x75\x38\xec\xf5\xfb\x0e\xd6\xfc\x91\xad\xa7\x21\x67\x52\x09\x42\x99\x2a\x4d\xb2\x4c\xa5\xd2\x7e\xd9\xec\x33\x64\x89\xc0\x67\x7a\x0b\xc6\x9a\xb9\x5b\x0d\x4b\xee\x3b\xa2\x50\x50\x12\x3f\x94\x64\x0f\x7f\x07\xed\x13\xa5\x1d\x72\x03\x40\xbb\xde\x84\x1e\xe1\xaa\x06\xf9\x98\x48\x79\xcd\x85\xdd\x3c\x0e\x88\x22\x21\x8f\x35\x5b\x4a\xf0\x38\x46\xa1\x37\x6f\xa8\xe2\x6c\x80\x87\xf5\xf1\x52\x15\xf3\x95\xed\xd1\xbc\xd7\xe3\xad\x45\x3b\x10\x8a\xce\x48\xa8\xac\x7d\xd6\xa0\x3d\x71\xf2\x9c\x73\x3e\x8f\xb5\x35\x70\x41\xe6\x08\x53\x03\x6f\xb6\x27\x7e\xcd\x62\x4e\x22\x88\xdc\xac\x53\xca\x88\x58\xd5\xce\x36\xb1\xb6\xb5\x71\x32\x87\x55\xcb\x46\x4f\xa4\x95\x10\xea\x05\xa7\xf7\x7c\x64\x57\x54\x70\x66\x62\x80\x2b\x22\xa8\x0e\x0e\x64\xed\x2c\x55\x3f\x50\xd6\x6f\x61\xc3\x07\xa5\x7d\xc1\x7a\x2c\x52\xa7\x54\x8d\xc4\xad\xb2\xe5\x5e\x2b\x26\x62\x8e\x7a\xae\x6f\x61\x92\x60\x48\x67\x14\xa5\x5d\x2d\xda\x37\xf1\x99\xf9\x5b\x70\xae\xf4\xee\x7d\x69\x26\xd0\x11\x4b\x29\xd6\x78\xea\x02\x33\xcd\xa5\x0d\x45\x0d\x3e\xcd\xab\x0d\x05\x1b\x55\x67\x58\x0e\x8c\x27\x1b\x27\xd3\x2d\x95\xc9\xe0\x0d\x7d\xd5\x2a\xf0\xb1\xd7\xd9\x2e\x33\xb6\xd7\x29\x70\x7e\x92\x2e\xa7\x6e\xe7\x7c\x47\xd9\x05\x89\x53\xec\xc3\xbe\xfd\x4d\x6e\xdc\xef\x6e\xa7\xb7\xa7\xc5\xb0\xd1\x03\x3f\x50\xf2\xa5\xb8\x74\xc7\x84\x50\xba\x2b\x49\xa7\x31\x0d\x0b\xeb\xed\xc9\x7d\xba\x51\xbd\xd6\x92\x86\x82\x9b\xd6\x81\x76\x74\x18\x19\x5a\x0b\xf1\x81\xea\xb5\x18\x61\xbc\xf8\x3b\x1f\xe3\x1a\x4c\x84\x59\x82\xc0\x88\xa6\xcb\x62\x8b\xb5\x01\xdf\xb0\xdc\x5d\x07\x59\xee\x56\x41\x6e\x2a\x2d\xbd\xf5\xa6\xbd\xf5\x51\x7b\xc5\x51\xf7\x78\x40\x02\x57\x24\xa6\x51\x55\xd2\xc6\xef\x15\x02\x87\xd2\x68\xbd\x3f\xf8\x98\xb7\x12\x0d\x38\x1d\x51\x69\x77\x82\x56\xe6\x5d\xf4\x39\x69\xb9\x44\x16\x49\x47\xab\x5a\x10\x65\xc2\x5e\x91\x32\x13\xe3\xfb\xc3\x4d\xa2\x1d\xd0\xcf\xc6\xb2\x53\x89\xa0\x38\xd7\xc7\x22\xed\x3c\x42\xce\x45\x44\x99\x09\x92\x43\xc1\xa5\x84\xc1\xcf\x1b\x36\x84\x22\x61\x9a\xae\x7e\xff\x13\xb7\x05\x1d\x5a\x57\x63\x9e\x46\x29\x4e\xaa\x88\x47\x6e\x88\x95\xd6\xa5\xf3\x95\x48\xdf\x1c\xab\x95\xd0\x0e\x47\x07\x67\x30\x8d\x79\x78\x09\x3b\xa3\xb1\x3e\xc2\x9a\xa0\x4d\x10\x36\xc7\x27\x5a\x1f\x36\x34\xa8\x9e\x06\x9d\x86\x4b\xcb\x54\xab\xf3\xed\xf9\xf9\x78\xb2\x06\xbb\x7e\x14\x7d\x2f\x11\x3a\x2d\xf3\xaf\xed\x0f\x06\xd9\x54\x6e\xa8\x39\x19\x69\x0f\x19\x3b\xe2\xeb\x77\x56\xe3\x8a\x8e\x91\xcd\xd5\xa2\x0f\xdb\x2f\xb6\xbd\x37\xca\x9a\xba\xfb\xdb\xc5\x95\x3f\x26\x4a\x9f\x97\xfb\xd0\xdc\xf9\xe5\x97\xe8\x63\xf7\xe9\xee\xed\x93\x5f\x7e\x69\x3d\xe4\x47\xdb\xfd\xd9\xbb\x7d\xd2\x7c\xcc\xca\x1b\x8d\xad\x94\x8d\x4c\xbd\x73\x9e\x71\xb1\x84\x9b\x96\xf9\xd7\xbe\xb1\x31\x48\x5d\xa8\x99\xb9\xb1\xed\xde\x76\x55\x7b\x23\x46\x95\x0e\x41\x98\xf1\xcc\x1a\x77\x41\xd4\x66\xcb\x80\x9d\x6e\xd0\xeb\x94\x9c\x64\xad\x1b\xdf\xee\x6e\xaf\x39\xf2\xed\x9e\xdb\x0c\xee\x61\x73\x8a\xea\x1a\x91\x41\xd7\xa8\xbf\xd7\x29\xef\x32\x2d\xb7\x25\xfa\x78\x37\x4f\x5e\x58\x2c\x46\xe7\xe6\x88\x2c\x8c\xb9\x18\x6f\xb0\x40\x2a\x80\x5f\x33\x13\x49\x48\x25\xf4\x71\x5e\x32\x92\xc8\x05\x57\xd2\xe0\x73\x52\xfc\x2d\xa5\xe1\xa5\x54\x44\xa8\x80\x5c\xcb\xe0\x2a\x09\x0d\x11\x85\xe6\x98\xb2\xf4\x26\xf0\x56\xea\x0f\xd9\x1a\x49\x5d\x8c\x5e\x31\x92\xff\xf8\xf7\x4e\xf0\x82\x04\xbf\x0f\x82\x9f\x7f\xfd\xeb\x4e\xfe\x23\xf8\xf5\xfb\x42\xcf\x93\xef\xb7\xee\xb4\x88\x7f\x68\x7a\x60\xa2\x09\xf2\x01\x8d\x59\xc2\x21\x61\x3e\x15\xe3\x54\x28\x9f\x82\xa6\x40\x84\x44\x7a\x7f\x1f\xa3\x26\x46\x3e\x85\x34\x49\x6c\x47\xde\xa4\x99\x5d\xac\x92\x05\x32\x09\x3b\xc1\x93\x16\x8c\x94\x46\xca\xb8\x02\xc3\x3e\x70\x01\xc8\x22\x9b\xc3\x20\x0e\xd4\xe1\xd5\xf0\x8d\xb2\x8d\x15\xe4\x26\x70\x86\x02\x59\x88\x55\xa3\x3b\x65\xf1\x0a\xc2\x85\xb1\x66\xe3\xe7\x5c\x6a\x63\x41\xae\xb4\x57\x54\x90\x26\x40\xa4\x44\xa5\x99\xa1\x97\xa8\x3b\xad\x3a\x59\x76\x18\x71\x34\x94\x8c\xe1\xa9\xcb\x93\x4d\x76\x9d\x90\x5c\x4a\x49\x33\xa9\x95\x5d\x3a\x03\xe5\x79\x0f\x2d\x0d\x33\x7f\x96\x00\xd3\xff\x59\x7a\xa5\x4f\xb0\xa0\x6f\x68\x5b\x74\xde\x0e\xda\x10\x51\x81\xa1\x8e\x2c\x51\x6a\xab\xca\x68\x9d\x71\x71\xe9\xcd\xec\x2d\x6a\xd6\xbd\xcb\x2b\x6a\xd3\xf3\x99\x26\x3a\xe0\xc5\x48\x9b\xf0\x64\xd7\x66\xa4\x14\x17\x18\x01\xf1\x47\xbc\xad\x8f\x96\x2b\xad\xf9\xdb\x96\xdc\x6d\x11\x93\x6d\x22\xd7\xb2\x15\xf2\x65\x7b\xeb\x63\x62\x18\xbb\x6d\x7b\x4a\x25\x5f\xe2\x8c\xc6\xd8\x52\x37\xaa\x35\xd9\xb5\xf9\xb0\x82\xf9\x78\x19\xde\x69\x44\x8f\x32\x1f\x7f\x44\x7f\x80\x11\xe5\xf0\xd5\xa3\x4e\xcd\x61\xf6\xae\x85\x15\xfc\xfa\xd7\x9d\x76\xe9\xe7\x63\xd6\xd3\x25\xae\xc0\x4a\xee\xa1\x92\x70\x5c\xd6\xc8\xa3\x20\x0b\x2b\x9c\x19\x17\xd7\x44\x44\x20\x63\x22\x17\xb0\xd3\xde\xb8\xc2\x1c\x4e\x23\xa2\xca\x20\x98\x62\x48\x9c\x63\x5b\x01\x11\x68\xb2\xca\x4b\xa2\x68\x48\xe2\x78\x05\x24\x49\x90\x45\x18\xb5\xca\xab\x71\x61\xac\xae\x6d\xec\x54\xfd\x91\x65\xb8\xbe\xae\x9e\x02\x91\x80\x37\x49\x4c\x28\xcb\xd2\x66\x36\x15\x5d\x70\xd4\xd9\x02\xb3\x86\x37\xd9\xfd\x82\xa2\xd6\xfb\xd6\x66\x61\x1b\x31\x3b\xd4\x35\xc3\x1e\x27\xee\xf5\xa3\xe2\xa6\xac\x4a\xcd\xc9\x21\x80\x90\xc4\x34\xe4\xee\xc7\x35\x92\xab\x3b\x43\xb8\xed\x61\x2a\x04\x32\x15\xaf\x40\xa6\x49\xc2\x85\xc2\x48\xc7\x08\x29\x4a\x43\x66\xd3\xa2\x6b\x1a\x79\x34\x0d\xba\xe6\xda\x79\xac\x30\x61\x39\x8c\x5b\x70\x2e\x5d\x70\x98\x67\x7c\xdc\x8d\x81\xf0\x1b\xab\x8e\x4c\x75\x84\x9e\x32\x6a\x63\x2a\xbf\x79\x3b\x61\x26\x3c\x92\xde\x10\xaa\x37\x12\x2d\x98\x64\x54\x97\x1c\xb7\xa5\xde\x92\xe6\x9d\xe4\xce\x42\xa9\xa4\xdf\x6e\x47\x3c\x94\xad\x44\xf0\x7f\x62\xa8\x2c\x44\x8b\x8b\x79\xfb\xaa\xd7\xea\xb4\xe7\xf6\xec\x1f\x18\xdd\x62\xd4\xbe\xcc\xa6\x6c\x9b\xf8\x21\x8e\x0d\xfa\xb6\x8e\x2d\x5d\x37\x89\x96\x6d\x9f\x9a\xd3\x52\x32\x42\xb2\x93\xc9\x7e\xbb\x3d\xa7\x6a\x91\x4e\x8d\x3f\x35\x3d\x5a\x10\xd2\xfe\xd9\x9e\xc6\x7c\xda\xb6\xa7\xea\xb6\xa4\x0a\x0d\xbe\x80\x44\x11\x67\xad\x65\x54\xe7\xcc\x6c\xc2\x7c\x60\xb6\x95\x2c\x77\x53\x03\x31\xc1\x50\xa0\xba\x07\xce\x5e\x45\x1d\xed\xcb\xa1\x95\xe6\x5a\x78\xa7\x44\x5a\xb3\xd5\x66\xf7\x57\xb9\x68\x5c\xf6\x8d\x0b\xd0\xcb\x62\x67\xc9\xa5\xb6\xa7\xec\x7c\x5c\xbc\x17\x49\x52\x91\x70\x89\xad\x27\x77\x1e\x7d\xfd\xc4\xfa\xc7\x8c\xc4\x2e\xee\x58\x27\xff\x62\x3c\xd4\x41\x6c\x0d\x6f\x25\x36\x9a\x5d\x1f\xd7\x77\x9f\x37\xab\xfc\x34\x2f\xc6\xc3\xc2\x91\xa3\x69\xf7\x8b\x89\xb9\x50\xea\x3c\x1c\x7f\xb7\xd5\x69\xf7\xf6\xea\xf0\x8f\x6d\x7a\xc0\x5d\x51\x75\x4a\x73\x65\x33\x75\x1f\x3e\x53\xef\x81\x33\x75\xeb\x67\x1a\xdb\x2b\xb3\x47\xb0\xb6\xbb\x79\xc2\xf2\xf5\xdb\x06\xde\x1c\xd4\x23\x58\xdc\x7b\xe8\x8c\x6b\x3c\xbe\x23\x49\x42\xd9\xdc\x98\xd2\x19\xce\x29\x67\xef\x48\x62\xa7\x24\x49\xc0\xb8\x50\x0b\x24\x52\x05\xd9\x3d\xc3\xf6\xf3\xbd\xed\x3e\x90\x25\x0d\xba\xfb\x64\x16\xee\xfd\x6d\x56\x05\xee\x55\x81\x5f\xec\x46\xcf\x3b\x9d\x59\xe4\x81\x25\x4f\xd5\xa2\x0e\xeb\xfe\x33\x9c\xbd\xe8\x22\x29\x01\x6e\x22\x61\xda\xdb\xef\x75\x9f\x47\xdd\x2a\x70\x0d\x09\xf8\x7c\xfa\x6c\x1f\xf7\x9f\x35\x6c\xbc\x15\x84\xc8\x94\x20\x71\x1d\xde\xbf\x75\xbb\x3d\xd2\xe9\x5a\x50\x4c\xef\x02\x9d\xe1\x5e\x67\xbf\xf3\xa2\xeb\x41\xaf\xb1\x9e\xd4\x90\xec\x77\x48\x67\xfa\xa2\x04\x57\x47\x65\x84\x3d\xdc\xdf\xb7\x70\x92\x04\x9b\x58\xc7\xce\xdf\x9e\x61\xb4\x1f\x9a\x8e\x54\x6e\x84\x7b\x11\x85\xb3\x68\xba\x4f\x4a\x70\x35\xf3\xce\xc2\xb0\xfb\x62\xfa\xe2\x85\x87\xdb\xc4\xc7\xb4\xf3\xac\xd7\xd9\x8d\x3a\x25\xb8\x1a\x7c\xd3\x5e\xb4\xf7\x7c\x37\xea\x35\x1a\x43\xce\xec\x8d\xba\x31\xb2\xf7\xf2\x90\x48\xd5\xcd\x1a\xed\xc8\xd7\xac\xdf\x3f\xfc\x2d\x25\x71\xb6\x29\x7f\x73\x86\x33\x9b\x6a\xb1\x66\xe9\x9a\x9b\x19\xab\xda\xd6\x27\x0b\x9e\xc6\x51\xe6\x94\xfb\xb0\x01\x59\xe6\x1e\x1d\xde\x75\x37\xde\x68\x9c\xf9\x7b\xde\xbe\x39\x99\x66\x3f\x8d\x3b\x76\x77\xdc\xd6\x81\xf6\x6b\x53\x41\xb6\x1b\x60\x2c\x78\x82\x42\xd1\xdc\x39\x0f\x69\x24\x5e\xe9\xd5\xa6\x8f\xe7\xb9\x5f\xdd\x76\xdd\x87\x8c\x4c\x63\x3c\x60\xd2\x6d\xcb\x7d\xd8\xd6\xd4\x56\xba\xdf\x72\x69\x0e\x1d\x72\x0d\xe0\x9c\xcc\x0b\xfb\x80\xde\xb8\xa0\x70\x4d\x09\xe0\xf2\x00\xb9\x38\x27\x7a\xe7\x31\x20\x0d\x80\x83\xb7\xc3\xf1\x69\x92\x29\xa7\xca\x57\x01\x60\x03\x7f\x07\x7c\x49\x28\x2b\xdf\x90\x7d\x9b\x5b\x24\x30\xc4\x48\x42\x0b\xc3\x5e\x8b\x32\xfb\xca\xe1\xa9\xcd\x6c\xa3\x54\x59\x96\xdb\xe8\x58\xc2\x1c\x15\xfc\xdd\xfe\xf8\x41\x07\x00\x49\xaa\x30\x1b\xd6\x2a\xe0\x9f\x20\x42\x31\x38\xd1\x07\x30\x7b\x14\x33\x71\x83\x7d\x03\x70\x31\x1e\xba\xc0\xbb\xfd\x5e\xa2\x78\x93\xd2\x08\xdb\x17\xe3\xe1\x07\xcd\xd5\x07\xc7\x56\x6b\xa1\x96\x71\x86\x59\xdb\xce\x68\x96\x73\x12\x54\x0c\xb6\xd0\xd5\x2c\x32\xd5\x2c\x74\x7c\x33\x49\xa7\xd0\xdc\xfa\x58\xb0\xdf\xdb\x0a\x3b\xcd\x8a\x00\x27\x28\xae\x4a\x37\xde\x96\x0d\x17\xc2\x46\x07\x27\x13\xb7\x89\x17\xb4\x32\x90\x92\x87\xb4\x90\x18\xac\xb1\xcc\x7a\xf0\x0d\xfa\xbc\x48\xc2\x51\xe4\x0c\xc6\x5b\x35\xc0\xc1\x22\x4c\x1c\x8a\xac\xb7\x68\x1b\xe6\x7a\x46\x99\xe8\xe6\x0d\x51\x78\x4d\x56\xf5\xd4\xac\x01\x6d\xa0\xa1\xce\xa8\x6d\x40\xbc\x6e\xd7\x76\x03\x77\x62\x71\x48\x07\x4a\x91\x70\xa1\x83\xa7\x8d\x12\xa9\x40\x3e\x4a\x18\x6b\x4c\x64\x10\xeb\xcc\x69\x57\xf2\x6d\x16\x65\x9b\x58\xde\xc6\x1b\x3a\xe8\x2d\x3f\xc4\xd1\x11\xbb\xa4\x11\xc2\xef\x9c\x61\xa0\xbd\xb5\xdb\xb7\x5d\x58\x55\xcf\x89\xed\x7c\x14\xed\x05\x77\x64\x7a\xaa\x21\x8e\x03\xac\x24\xb7\x2d\x7c\xf1\x19\xc8\x03\x7d\x4f\x39\x02\x79\x98\x5a\xed\x10\x2d\x41\xab\xe1\x2f\x23\x86\xcf\xc4\x7f\x31\xc8\x7c\x8c\x55\x97\x40\xf3\xa3\x9c\xdf\xb4\xd6\x06\xd5\xb9\x78\x0b\xf0\x8e\x24\x16\xe3\x28\x39\x65\xc7\x24\x65\xe1\xc2\x9d\x55\xcc\x66\x77\xbe\x40\x38\x19\x9c\xc3\x68\x9c\xdd\xdb\x95\x8d\xd3\xa4\x1a\x24\x22\xb3\x89\x38\x7d\x70\x77\xe7\x4b\x67\xcf\xfe\xc2\x24\x33\xde\x93\xc1\xf9\xe1\x68\x9c\xdd\x49\xe9\xa3\xba\x3c\x65\xfd\xda\x45\x5a\xab\xd2\xc3\xd1\xf8\xce\xfd\xa6\x0f\x57\x49\x58\x26\x7f\x6e\x11\x6f\xe0\xa1\x42\x9f\xa3\xe3\x0f\xd0\x78\x42\xee\x71\x63\xfa\xb0\x66\x8f\xe8\xc6\x02\xdf\xa0\x1a\x28\xe5\x65\xd3\x2a\xf6\xba\x01\xd6\x0a\x33\x73\x2d\x99\x7e\xa3\xe2\x13\xce\x78\xaa\xf0\x5c\xc7\x07\xf5\xcb\x22\xef\x7f\xd4\xd2\xf8\xa4\x55\x2d\x1f\xbd\xac\xab\xac\x7c\xba\x26\xcc\xf0\x0d\x4c\xe6\x52\xc8\xe5\xba\x41\x8c\xde\xc2\x50\x2a\xca\x8c\x66\x0a\x6e\x62\xfd\xaa\x2b\xd7\x7e\x86\xb7\x60\x55\x77\x69\xeb\xde\x2d\xdb\x8e\xa8\x1d\xb0\x81\xc9\x75\xc3\x29\xcd\xfc\x09\x82\x58\xf7\xbb\x5f\xd9\xd4\xdc\x73\x81\xc7\x58\x5a\x16\x17\x54\xf9\xf8\x72\x76\x56\x2f\xc2\x47\x99\xd9\x03\x62\x8c\x0d\xd3\x7c\x01\x33\x2b\xf9\xa7\x47\x8b\xe1\xd3\xe3\xa3\xe9\xfa\xea\xea\x7e\x99\xf8\xa8\xfb\xb0\xf8\xa0\xfb\xb5\xe2\xa3\xcf\x2d\x86\xcf\xc4\xff\x1f\x8b\x8f\xbe\x56\x74\xd3\xfd\x5f\x10\xdd\xfc\x01\x1a\xff\x50\x74\xd3\x7d\x64\x74\xd3\xad\xec\x97\xdd\x7f\x9d\xe8\xa6\xfb\x15\xa3\x9b\xee\xe7\x88\x6e\xee\xd4\xd6\x17\x8e\x6e\xba\x9f\x20\x88\x75\xaf\xf9\x2f\x12\xdd\x7c\x69\x3b\xab\x17\xe1\xe7\x8c\x6e\xbe\xac\x99\x95\xfc\xd3\x27\x88\xa1\x01\xe0\x1f\x27\x55\x48\x9c\xec\xf6\xfb\x85\xda\x81\x2a\x31\x85\x47\x4d\x6e\x07\x2e\xbe\xb1\x76\x7b\x03\xb9\xf4\xbb\x56\xe1\xce\x94\x5c\xcb\x20\x7f\x03\xd4\xde\xf4\x8c\xaa\x05\xf0\x23\x42\xc4\xd9\xb6\x32\xc8\x42\x12\xc7\x40\x95\x7b\x4a\x13\xaf\x0a\x17\xf0\x44\x15\x1e\x15\xe9\xad\x26\x44\x09\xbd\xd2\xab\x41\xe9\x2e\x72\x81\xb3\x78\x65\xf0\x5d\x13\xa6\xc0\x56\x9d\xb8\x57\xc4\x6f\xb9\xdc\x90\x91\xf3\xef\x8b\x37\xc8\x62\xb4\x24\x73\x2d\xf0\x6c\x19\xbc\x66\xfd\xfe\x6b\xca\xa2\x51\x7e\x5b\x65\x17\x4d\x76\x85\x55\x6a\x9b\xf5\x2b\x37\x09\xb6\x6b\xfb\xf9\x9e\xcf\xa3\x97\x9e\x38\x5b\x89\x6f\x2e\x0a\x72\xcb\x32\xab\xb9\x2a\xa6\x6c\x9d\x99\xa1\x8f\x49\x06\xf6\x31\x66\xbf\x78\x47\xab\x97\x47\x8c\x0a\x4f\xd9\x39\x8a\xa5\x5b\x26\x15\x88\x2b\x1a\xe2\x88\x45\x78\xd3\x87\x4e\xd6\xfc\x80\x10\xdc\x86\x0d\x54\x66\xef\x40\xa9\x84\x70\xc1\x25\xb2\x4c\xa7\x3c\xcd\x1e\x61\xbb\x00\x62\x8a\x73\xca\x24\x10\x05\x85\xcb\xd9\x0c\xa1\x73\xa5\x05\x6e\xb6\x1d\xd8\xb3\xed\x0c\xc8\x94\x9a\x4d\xbc\xb1\x17\x84\xef\x04\x39\xc1\x30\x15\x54\xad\x0c\xdc\xe3\x7c\xa4\x33\xb5\x40\x9b\x9a\xeb\xf3\xb5\x29\x56\x0e\xc5\x6a\x12\x80\xf7\x12\xc5\x81\xab\x96\xcb\x2d\xe6\x15\x91\xf8\x7c\x2f\x6f\xb3\xad\x93\x74\xda\x87\xff\x2c\x34\x02\x7c\xfb\x4d\x7b\x4a\x59\x7b\x4a\xe4\xa2\xd4\x4e\x12\x15\xcc\x51\x81\x7b\xd7\x00\x29\xfb\x9d\x26\x10\x04\x2b\x94\x25\xb8\xd2\x8f\xe5\x65\x44\x05\x04\x09\xb4\x79\xa2\xda\xbe\x98\xe2\xbb\xef\x4a\x40\x00\x61\x2a\x62\x08\x8e\x25\xb4\xd5\x32\x01\xff\x14\xc2\x95\x65\xb4\x6c\x95\x06\x49\xa8\x7f\x66\x56\xae\xef\xb8\x6d\x9b\xe2\x0c\x8a\xb2\xbd\xf5\xb1\x5c\x51\x72\xdb\x26\x09\x0d\x55\xdc\xd2\xa4\xfe\x60\xb0\x17\x5b\x2a\x74\x58\x9e\xd6\xc1\x82\xe8\x3e\xf2\x17\x4b\x1e\xc1\x5f\x6f\x4a\x60\x0e\xc3\x66\xd9\x84\x44\xc1\xdf\xff\x7e\x78\xfa\x1a\x7e\xf8\xa1\x3c\x72\xeb\xa3\xd3\xe8\x6d\x2b\xc1\x65\x69\x90\xe9\xf2\x75\x3b\xb7\xa5\xae\xc3\xd3\xd7\x8d\x46\x95\xac\xe7\x9d\xce\x83\xb1\x87\x0b\x7e\xcd\x20\x38\x83\x74\x9a\x32\x95\x96\xc6\x95\x00\xe5\x4a\x2a\x5c\x86\x2a\x86\x88\xe0\x92\xb3\x40\xa0\x29\x97\xf9\xee\xbb\x42\x17\x9a\xeb\x3b\x70\x72\xb8\x83\x77\x54\x61\xbb\x50\x09\x53\x82\x3c\x18\x9c\x0f\x86\xa7\xc7\x1f\xc6\x67\xa7\x17\xa3\x83\xc3\xb3\x97\xe4\x5a\xd6\x02\x4c\xce\x07\xc3\xa3\x97\xee\xda\x29\x4b\x02\xdf\xd6\xc2\x5e\x1c\x9e\x4d\x46\xa7\x27\x2f\x2b\xf6\x52\x0b\xfd\xea\xfd\xf0\xe8\xf0\xfc\xe5\xd6\xc7\xd2\x2e\x54\x0f\x3b\x18\x8f\x3e\x1c\x1d\xfe\xa4\xe9\x30\xd5\x52\x65\xa8\xc1\x8f\x93\x0f\x17\xe3\xe1\x87\xd1\xc1\xcb\xad\x8f\x25\xef\xd5\x32\x51\x54\x3d\xce\xa3\xc3\x9f\x3e\x9c\x0c\xde\x1d\xbe\xcc\x35\x57\xc1\x3a\x79\xff\xea\xe4\xf0\x7c\xb2\x8e\xf6\xf6\x69\xb9\xa1\xbb\x71\xe4\x87\xf1\xd9\xe8\x62\x70\xae\x27\x29\x27\xc6\x0c\x8a\x52\x30\x59\x83\xe3\x70\xf8\xfe\x6c\x74\xfe\xd3\x87\x37\x67\xa7\xef\xc7\x2f\xb7\x3e\xd6\x39\xbd\x96\xf9\xff\x3a\x93\x5e\x24\xfa\x70\xfd\x72\xeb\xe3\xc5\x78\xd8\xca\x42\xa6\x2a\xe4\x60\x38\x3c\x7d\x7f\x72\x6e\x05\x68\x34\x3d\x08\x43\x9e\x32\x55\x87\xf6\xec\xf0\x8d\x55\x72\xf1\x26\xb2\x0e\xe5\xe1\x64\x62\x84\xec\xb1\x66\xef\xa0\x6a\x39\x3d\x3b\x3c\x2f\x0c\xb2\x23\xd6\xde\x4f\xdd\xb3\x30\xf3\x25\x62\x83\x8a\x7c\x85\x7c\x0b\xa7\x09\x32\x48\x13\x48\xb8\x50\xd0\xeb\x65\xa5\x79\x75\x45\x45\x79\x74\x51\x12\xf4\x86\x90\xb0\xb2\x01\x55\x63\x0d\xd3\x57\xae\x6e\xb2\x6b\xb8\x50\x3c\x71\x45\x89\x27\xee\x29\x0c\x12\x9a\x37\xec\x77\xf6\x3b\x26\x12\x7a\x23\x92\x30\x6f\xee\x76\x3a\x9d\xce\x9d\x67\x85\x12\x69\xae\xe0\x23\xdf\x17\x47\xc9\x58\x70\xc5\x43\x1e\xf7\x41\x85\x79\x70\xf3\x5a\xf0\xe5\xd8\x3e\x1a\xe8\xf5\xf2\x8d\xf8\x9c\xd7\x34\x6a\x93\x1a\x25\xfe\x9a\xe8\xae\x82\xed\x07\xcc\xa6\xf9\xac\x99\xaf\xdc\xfc\xa7\xce\x68\x44\x58\x33\xe5\x5a\xfb\xfd\x73\x1a\x13\xf3\x4f\xf2\x92\x44\x42\xb4\x62\x64\xc9\xa3\x29\x28\x17\xb7\x1f\x98\x86\x41\x92\xd4\x1f\x09\x6d\xf7\xc1\xab\x7e\xff\xae\x23\xa1\xe9\xb3\x01\x4a\x29\x08\xf9\x37\x4e\x59\x31\x04\x09\xa0\x19\x34\xa1\xd4\x10\xdc\x71\x95\x97\x0d\xd2\xa4\xfb\x17\x04\x03\xa5\x04\x9d\xa6\x0a\x0f\x70\x46\x19\x2d\x3c\xe7\xb0\xc0\x59\xbf\xa5\x87\x95\xd1\x65\xbd\x96\xc7\xe6\xa4\x99\x47\x58\x93\x70\x81\x4b\x72\x07\xae\xa6\x46\xd6\x2c\x60\x3b\xc2\x95\xc3\xf3\x76\x30\x79\xeb\x7b\xcc\x13\x06\xbd\xbd\x60\x74\xbe\x10\x3c\x9d\x2f\x92\xb4\x10\x27\x9e\x21\x89\x7c\xc5\xcc\x7b\x46\x95\xec\x43\xf3\x59\x8e\xf5\x47\x41\x15\xd6\xf4\x9b\xfc\x71\xa6\xcc\x69\x4a\xe3\x68\x93\x36\x5f\xe9\xce\x3f\x47\x9f\x9f\x45\x9d\x86\xf8\x4f\x55\x68\x93\x46\xcd\x3f\x4d\xa1\x65\x5c\x5f\x4f\x9d\x02\x63\x24\x12\x37\xae\xcf\x33\xdb\xff\x3f\x58\xa7\x9e\x83\xff\xd3\x2a\x0c\xf5\x71\xa9\x50\x8a\x9d\x7f\xba\xc5\x14\xd9\xa4\x49\x12\xaf\x80\x2a\x59\xf8\x10\x4a\x23\x3b\xc6\xfa\xaf\xbb\x10\x5f\xad\x69\x1f\x4f\x9b\xbc\x84\xef\xd3\xb8\x49\xa8\x52\x12\xd7\xbc\x79\xb7\xf9\x88\x3c\xaf\x9f\xbf\xe7\x3b\xda\x97\x46\x7d\x15\x03\x5a\xff\xbc\x8a\x81\x32\x40\xf9\xcb\xc5\xf5\xe7\x87\x9b\xac\xcc\xb1\xfa\xfe\xec\xb8\xef\x5e\x86\xf9\xe3\xdd\xd6\xc7\x72\xfd\x5a\x6d\x45\x51\xa9\x10\xe7\xb6\x9d\x57\x3d\xe5\xcf\xc9\x03\xff\xb8\xdf\x77\x66\x2a\xad\x7c\x46\xc5\x3c\x94\x1a\x1d\x54\x02\x90\x07\x3d\x78\xa9\x4d\x93\xd4\xe4\x47\x4a\x05\xee\xee\xb1\xd8\xfa\x47\x57\x00\xdc\x3b\x96\x87\xdc\x5d\x6b\x05\x1e\x98\xc4\x54\x31\x0e\xe3\x2c\x5e\xe5\xb5\x61\xa5\x22\x56\xaa\x24\xc6\xb3\x3c\x6b\x32\x79\x9b\x95\xcf\x66\xaf\xf3\x0a\x69\xa9\x56\x96\xe0\xb8\x6d\xef\xf6\x72\xa3\x1e\x24\xf4\x78\x5a\x18\x79\x4f\x24\x73\x77\x56\xa2\x5a\x1c\xea\xa0\x6a\x3f\x5e\x53\xa9\x6d\xb4\xc0\xb5\x5f\xa3\x59\xaf\xd6\xca\x41\xf3\x2f\xd4\xac\x49\xbd\x98\x3f\xbd\xd3\x99\xd5\x94\xd2\xb8\xfb\x80\x4d\x9f\xe3\x01\x38\xe6\x24\x7a\x45\x62\x6d\x15\x15\xf5\x96\xdf\xb4\x9c\xa6\x2a\x49\x95\x7b\x75\xeb\x7e\x58\x95\x5e\x8c\x87\xf9\x67\x49\xbc\xd5\x9a\x19\xca\xc5\xb3\x07\xfe\x0d\x29\xc3\xeb\x78\x15\x58\x87\x60\x2b\xe5\xf5\x49\xca\x8c\x28\xbe\x90\xb2\x26\x9f\x3d\xb5\x97\x35\x38\x9b\xc7\xd4\x3e\x4d\x2d\xa5\xc8\x9c\x1f\x77\xb8\x1c\xaf\xd5\xfd\x22\x80\xe6\xd3\xc2\x6e\x91\xed\x15\xf5\x99\x3a\xa8\xeb\xee\xe6\x95\x00\xd2\x19\xe6\x9d\x54\x96\xef\xaa\xfe\x20\x99\xf5\xcb\x0f\x6a\xfb\xbb\x0d\x28\xa7\x77\x7d\xd2\xb3\x4e\x51\x63\x70\xc9\x43\xaf\xb0\xd2\x82\x2d\x7c\x4f\xec\x3e\x2d\xba\x9b\xc6\xd2\xf2\x75\xf3\x36\xea\xc8\x39\x38\x99\xd4\xd0\xe3\xae\x5d\x0e\x4e\x26\xf0\xfa\x1f\x07\x27\x9f\x8d\xa8\x03\x26\xfd\x6b\xeb\xc9\xe4\xed\x58\xf0\x9b\xd5\x90\x2f\x97\x84\xb9\x7c\xf6\x3d\xfb\x49\x89\xe6\xb3\x94\x99\x4a\xfa\x38\x5e\x41\x60\x3c\x61\x68\x51\x99\x8f\xfd\x68\xd4\xbe\x58\xdf\x7d\x03\x8f\x16\x13\xeb\x00\xca\x6e\xeb\x15\x46\x9f\x9a\xc2\x7d\xeb\x54\xf3\x73\xec\x4e\x01\xb9\x9e\xab\x8c\x7a\xad\x46\xfd\x49\x59\x1c\xda\xc5\xfe\x10\x34\x32\xef\x6b\xf2\x04\xcd\x84\xa8\x45\x5b\xf1\xb5\xfc\x5b\xf3\xff\x39\x38\x99\xe5\x5b\x03\x0a\x5b\x6e\x94\x6f\x19\x40\x70\xac\xc9\xea\x1b\x01\x68\xaa\xfb\xfa\xa7\xef\xe6\x50\x14\xed\xcb\xa6\x94\x0b\x8d\xe5\x97\xe6\xd6\xc7\x6f\x1c\xa6\xdb\x5f\x9a\x2e\xab\xf7\xff\xd7\x9c\xbf\xb3\x9e\x5b\x60\x21\xfc\x65\x01\x7f\x49\xfc\x0e\x90\x81\xfb\x40\xa1\xe5\x7c\x54\xeb\x9d\x91\x42\xbe\x6d\x68\xfd\xbe\x41\xa5\xa5\x32\x34\x0f\x5a\xfe\x2c\x25\x0f\xc7\x45\x25\x67\x5f\xe5\x59\xaf\xee\x2b\x96\xf2\x39\xe2\x67\xd4\x7d\x66\xcf\x6a\xd6\x7c\x9a\xc3\x45\x3f\x3e\x0c\xbb\xa2\xb6\x2a\x2d\x54\xf1\xd3\xd2\x07\x16\xb3\x39\x63\xca\xec\x97\x3d\xfc\xeb\xfb\x61\x16\x8d\x35\xcd\x48\x33\x71\xd3\x4e\xe6\xe2\xab\xd0\x56\x48\x66\x55\xd9\x2b\x53\x7c\xca\x9e\xda\x6f\xe7\x11\x06\x22\xf5\x34\x36\xf1\xc6\x18\xdc\xd1\xfb\x57\x87\xc3\xd3\x93\xd7\xa3\x37\x2f\xb7\x76\x92\xeb\xe8\x49\xbb\x88\x5c\x71\x40\x26\x53\x81\x9e\x58\x48\xa5\x09\xfa\xe8\x1a\xe7\x86\x0c\x4f\xe9\x60\xca\x53\x95\x8d\x08\xb2\xa4\x7a\x1e\x37\xb5\x28\x37\xe5\x03\xed\x54\xa2\x08\xe6\xa6\x3e\x20\x11\x28\xf0\x37\xd9\x86\x3f\xc1\x9e\xb3\x54\x46\x8d\x3d\x7f\x6d\x83\xed\xff\x57\x41\xc4\xd0\x2a\xfc\x68\x94\x37\x63\x5b\x9b\x8b\x51\x1e\x69\x5d\xee\xe7\x5f\x3a\x6c\x00\x58\xcc\x3e\x0c\x1c\x7d\x82\xc9\xe7\x63\xbd\x1b\x76\x4e\xa6\xf8\x15\x8a\x5a\x7f\xbb\x81\xcd\x1c\x61\x23\x23\x30\x63\xfd\xf1\xf4\xf9\xd7\x20\x85\x6f\xab\x94\xe8\x7c\x0c\x69\x19\x19\xa6\x4e\x99\x47\xe8\x52\x7e\x7f\xa6\xf4\xca\xfb\x55\x36\xc9\xc3\xc8\xac\xa1\x49\x93\xaa\xc3\x07\xdd\x25\x1f\x4f\xe0\x30\xf7\x5f\xe6\x6b\xa9\x4b\x2e\xd0\x7d\xd8\xc4\xec\x29\x54\x96\x3f\xd1\x75\x1f\x85\x19\x29\x85\x0f\xa8\x6d\xfc\x32\xdb\x20\xa1\xa6\xe6\xdd\xd4\xd5\xfa\x0f\xa8\x1d\x8f\x2a\x71\xa1\x45\xf0\xdf\x01\x00\x00\xff\xff\xfc\xa9\x85\xd9\xce\x56\x00\x00")

func cmdProviderAwsTemplatesFormationYamlBytes() ([]byte, error) {
	return bindataRead(
		_cmdProviderAwsTemplatesFormationYaml,
		"cmd/provider/aws/templates/formation.yaml",
	)
}

func cmdProviderAwsTemplatesFormationYaml() (*asset, error) {
	bytes, err := cmdProviderAwsTemplatesFormationYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/provider/aws/templates/formation.yaml", size: 22222, mode: os.FileMode(436), modTime: time.Unix(1524752178, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/provider/aws/templates/formation.yaml": cmdProviderAwsTemplatesFormationYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"provider": &bintree{nil, map[string]*bintree{
			"aws": &bintree{nil, map[string]*bintree{
				"templates": &bintree{nil, map[string]*bintree{
					"formation.yaml": &bintree{cmdProviderAwsTemplatesFormationYaml, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

